{"version":3,"sources":["components/Cart/CartItem.module.css","components/Cart/Cart.module.css","components/Cart/CheckoutForm.module.css","components/Cart/CartItem.js","components/hooks/use-input.js","components/Cart/CheckoutForm.js","components/Cart/Cart.js"],"names":["module","exports","cart-item","summary","price","amount","actions","cart-items","total","button--alt","button","form","control","submit","invalid","error-text","CartItem","props","concat","toFixed","react_default","a","createElement","className","classes","name","onClick","onRemoveCartItem","onAddCartItem","useInput","validatetValue","_useState","useState","_useState2","Object","slicedToArray","enteredValue","setEnteredValue","_useState3","_useState4","isTouched","setIsTouched","valueIsValid","value","hasError","isValid","valueChangeHandler","event","target","inputBlurHandler","reset","CheckoutForm","_useInput","trim","enteredName","enteredNameIsValid","nameInputHasError","nameChangedHandler","nameBlurHandler","resetNameInput","enteredStreet","setEnteredStreet","enteredCity","setEnteredCity","_useState5","_useState6","enteredPostalCode","setEnteredPostalCode","_useState7","_useState8","enteredStreetIsTouched","setEnteredStreetIsTouched","_useState9","_useState10","enteredCityIsTouched","setEnteredCityIsTouched","_useState11","_useState12","enteredPostalCodeIsTouched","setEnteredPostalCodeIsTouched","enteredStreetIsValid","streetInputIsInValid","enteredCityIsValid","cityInputIsInValid","enteredPostalCodeIsValid","length","postalCodeInputIsInValid","id","nameControlledClasses","streetControlledClasses","cityControlledClasses","postalCodeControlledClasses","onSubmit","preventDefault","onConfirmOrder","street","city","postalCode","htmlFor","type","onChange","onBlur","onCancel","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Cart","isSubmit","setIsSubmitting","didSubmit","setDidSubmit","cartCtx","useContext","CartContext","totalAmount","hasItems","items","cartItemRemoveHandler","remove","cartItemAddHandler","item","addItem","objectSpread","submitOrderHandler","_ref","asyncToGenerator","_callee","userData","_context","fetch","body","JSON","stringify","user","orderedItems","clearCartAfterSubmit","_x","apply","arguments","cartItems","map","Cart_CartItem","bind","cartModalContent","Fragment","Cart_CheckoutForm","onCloseCartBtn","setIsSubmittingModalContent","didSubmitModalContent","Modal","onCloseModal"],"mappings":"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","file":"static/js/1.8aa05ee9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__FDy3U\",\"summary\":\"CartItem_summary__zOwgF\",\"price\":\"CartItem_price__1Ap4N\",\"amount\":\"CartItem_amount__39KY7\",\"actions\":\"CartItem_actions__1Oeqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__25UVU\",\"total\":\"Cart_total__4B0bG\",\"actions\":\"Cart_actions__fhk4c\",\"button--alt\":\"Cart_button--alt__3-pY1\",\"button\":\"Cart_button__wrQqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CheckoutForm_form__2geY0\",\"control\":\"CheckoutForm_control__2uSDX\",\"actions\":\"CheckoutForm_actions__35WVE\",\"submit\":\"CheckoutForm_submit__9yMP2\",\"invalid\":\"CheckoutForm_invalid__2fMfW\",\"error-text\":\"CheckoutForm_error-text__1TeHF\",\"button--alt\":\"CheckoutForm_button--alt__1VbsO\",\"button\":\"CheckoutForm_button__FeRgT\"};","import classes from \"./CartItem.module.css\";\nimport React from \"react\";\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes[\"cart-item\"]}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemoveCartItem}>−</button>\n        <button onClick={props.onAddCartItem}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useState } from \"react\";\n\nconst useInput = (validatetValue) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validatetValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n    setIsTouched(true);\n  };\n\n  const inputBlurHandler = (event) => {\n    setEnteredValue(event.target.value);\n    setIsTouched(true);\n    //console.info(\"blur\", event.target.id);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    hasError,\n    isValid: valueIsValid,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","import React, { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport classes from \"./CheckoutForm.module.css\";\n\nconst CheckoutForm = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const [enteredStreet, setEnteredStreet] = useState(\"\");\n  const [enteredCity, setEnteredCity] = useState(\"\");\n  const [enteredPostalCode, setEnteredPostalCode] = useState(\"\");\n\n  const [enteredStreetIsTouched, setEnteredStreetIsTouched] = useState(false);\n  const [enteredCityIsTouched, setEnteredCityIsTouched] = useState(false);\n  const [enteredPostalCodeIsTouched, setEnteredPostalCodeIsTouched] = useState(\n    false\n  );\n\n  const enteredStreetIsValid = enteredStreet.trim() !== \"\";\n  const streetInputIsInValid = !enteredStreetIsValid && enteredStreetIsTouched;\n\n  const enteredCityIsValid = enteredCity.trim() !== \"\";\n  const cityInputIsInValid = !enteredCityIsValid && enteredCityIsTouched;\n\n  const enteredPostalCodeIsValid = enteredPostalCode.trim().length === 5;\n  const postalCodeInputIsInValid =\n    !enteredPostalCodeIsValid && enteredPostalCodeIsTouched;\n\n  const inputStreetHandler = (event) => {\n    setEnteredStreet(event.target.value);\n    setEnteredStreetIsTouched(true);\n  };\n  const inputCityHandler = (event) => {\n    setEnteredCity(event.target.value);\n    setEnteredCityIsTouched(true);\n  };\n  const inputPostalCodeHandler = (event) => {\n    setEnteredPostalCode(event.target.value);\n    setEnteredPostalCodeIsTouched(true);\n  };\n\n  const inputBlurHandler = (event) => {\n    switch (event.target.id) {\n      case \"street\":\n        setEnteredStreetIsTouched(true);\n        break;\n      case \"city\":\n        setEnteredCityIsTouched(true);\n        break;\n      case \"postalcode\":\n        setEnteredPostalCodeIsTouched(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const formSubmittionHandler = (event) => {\n    event.preventDefault();\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredCityIsValid &&\n      enteredStreetIsValid &&\n      enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirmOrder({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode,\n    });\n\n    resetNameInput();\n    setEnteredStreet(\"\");\n    setEnteredStreetIsTouched(false);\n    setEnteredCity(\"\");\n    setEnteredCityIsTouched(false);\n    setEnteredPostalCode(\"\");\n    setEnteredPostalCodeIsTouched(false);\n  };\n\n  const nameControlledClasses = `${classes.control}\n   ${nameInputHasError ? classes.invalid : \"\"}`;\n\n  const streetControlledClasses = `${classes.control}\n    ${streetInputIsInValid ? classes.invalid : \"\"}`;\n\n  const cityControlledClasses = `${classes.control}\n    ${cityInputIsInValid ? classes.invalid : \"\"}`;\n\n  const postalCodeControlledClasses = `${classes.control}\n    ${postalCodeInputIsInValid ? classes.invalid : \"\"}`;\n\n  return (\n    <form onSubmit={formSubmittionHandler}>\n      <div className={nameControlledClasses}>\n        <label htmlFor=\"name\">Your Name : </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        ></input>\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty,Enter Valid Name</p>\n        )}\n      </div>\n      <div className={streetControlledClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input\n          type=\"text\"\n          id=\"street\"\n          onChange={inputStreetHandler}\n          onBlur={inputBlurHandler}\n          value={enteredStreet}\n        ></input>\n        {streetInputIsInValid && enteredStreetIsTouched && (\n          <p className=\"error-text\">Enter Valid Street Name</p>\n        )}\n      </div>\n      <div className={cityControlledClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input\n          type=\"text\"\n          id=\"city\"\n          onChange={inputCityHandler}\n          onBlur={inputBlurHandler}\n          value={enteredCity}\n        ></input>\n        {cityInputIsInValid && enteredCityIsTouched && (\n          <p>Enter your City Name</p>\n        )}\n      </div>\n      <div className={postalCodeControlledClasses}>\n        <label htmlFor=\"postalcode\">Postal Code</label>\n        <input\n          type=\"number\"\n          id=\"postalcode\"\n          onChange={inputPostalCodeHandler}\n          onBlur={inputBlurHandler}\n          value={enteredPostalCode}\n        ></input>\n        {postalCodeInputIsInValid && enteredPostalCodeIsTouched && (\n          <p>Enter Valid Postal Code (no long Five) </p>\n        )}\n      </div>\n\n      <div className={classes.actions}>\n        <button\n          type=\"button\"\n          onClick={props.onCancel}\n          className={classes[\"button--alt\"]}\n        >\n          Cancel\n        </button>\n        <button className={classes.button}> Confirm </button>\n      </div>\n    </form>\n  );\n};\n\nexport default CheckoutForm;\n","import React, { useContext, useState } from \"react\";\n\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport CheckoutForm from \"./CheckoutForm\";\n\nconst Cart = (props) => {\n  const [isSubmit, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n\n  const cartCtx = useContext(CartContext);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.remove(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    // DEMO UseContext consume\n    // NOTE addItem will trigger the addItem function in the cart provider component\n    cartCtx.addItem({ ...item, amount: 1 });\n  };\n\n  const submitOrderHandler = async (userData) => {\n    setIsSubmitting(true);\n    // NOTE calling firebase\n    // DEMO\n    await fetch(\n      \"https://foodorder-7968b-default-rtdb.firebaseio.com/orders.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          user: userData,\n          orderedItems: cartCtx.items,\n        }),\n      }\n    );\n\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.clearCartAfterSubmit();\n  };\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemoveCartItem={cartItemRemoveHandler.bind(null, item.id)}\n          onAddCartItem={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const cartModalContent = (\n    <React.Fragment>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {hasItems && (\n        <CheckoutForm\n          onConfirmOrder={submitOrderHandler}\n          onCancel={props.onCloseCartBtn}\n        />\n      )}\n    </React.Fragment>\n  );\n\n  const setIsSubmittingModalContent = <p>sending order data...</p>;\n  const didSubmitModalContent = (\n    <React.Fragment>\n      <p>\n        successfully send the order.., we will notify you once the order is\n        ready.\n      </p>\n      <div className={classes.actions}>\n        <button className={classes.button} onClick={props.onCloseCartBtn}>\n          Close\n        </button>\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <Modal onCloseModal={props.onCloseCartBtn}>\n      {!isSubmit && !didSubmit && cartModalContent}\n      {isSubmit && setIsSubmittingModalContent}\n      {!isSubmit && didSubmit && didSubmitModalContent}\n    </Modal>\n  );\n};\n\nexport default Cart;\n"],"sourceRoot":""}